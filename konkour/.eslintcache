[{"/home/yoan/Projets/React/konkour/konkour/src/index.tsx":"1","/home/yoan/Projets/React/konkour/konkour/src/App.tsx":"2","/home/yoan/Projets/React/konkour/konkour/src/Pages/Register/Register.tsx":"3","/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/Footer.tsx":"4","/home/yoan/Projets/React/konkour/konkour/src/Firebase/firebase.ts":"5","/home/yoan/Projets/React/konkour/konkour/src/Pages/Login/Login.tsx":"6","/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/Header.tsx":"7","/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/LogoSvg.tsx":"8","/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/Title.tsx":"9","/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/KButton.tsx":"10","/home/yoan/Projets/React/konkour/konkour/src/Pages/Home/Home.tsx":"11","/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/ConnectedRoute.tsx":"12","/home/yoan/Projets/React/konkour/konkour/src/Pages/Contests/Contests.tsx":"13","/home/yoan/Projets/React/konkour/konkour/src/Pages/Profile/Profile.tsx":"14","/home/yoan/Projets/React/konkour/konkour/src/Hooks/useUserProfile.tsx":"15","/home/yoan/Projets/React/konkour/konkour/src/Hooks/useUser.tsx":"16","/home/yoan/Projets/React/konkour/konkour/src/Pages/Admin/Admin.tsx":"17","/home/yoan/Projets/React/konkour/konkour/src/Pages/Admin/Components/NotPostedContests.tsx":"18","/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/RawContest.tsx":"19"},{"size":219,"mtime":1612257470593,"results":"20","hashOfConfig":"21"},{"size":1561,"mtime":1612724467617,"results":"22","hashOfConfig":"21"},{"size":3044,"mtime":1612392968226,"results":"23","hashOfConfig":"21"},{"size":628,"mtime":1612276515399,"results":"24","hashOfConfig":"21"},{"size":952,"mtime":1612277902282,"results":"25","hashOfConfig":"21"},{"size":3114,"mtime":1612308422752,"results":"26","hashOfConfig":"21"},{"size":6596,"mtime":1612394145586,"results":"27","hashOfConfig":"21"},{"size":6905,"mtime":1612909978520,"results":"28","hashOfConfig":"21"},{"size":90,"mtime":1612287737047,"results":"29","hashOfConfig":"21"},{"size":166,"mtime":1612304846206,"results":"30","hashOfConfig":"21"},{"size":3907,"mtime":1612393028985,"results":"31","hashOfConfig":"21"},{"size":625,"mtime":1612308588909,"results":"32","hashOfConfig":"21"},{"size":226,"mtime":1612393888807,"results":"33","hashOfConfig":"21"},{"size":2241,"mtime":1612713721608,"results":"34","hashOfConfig":"21"},{"size":907,"mtime":1612390009671,"results":"35","hashOfConfig":"21"},{"size":345,"mtime":1612392158486,"results":"36","hashOfConfig":"21"},{"size":1430,"mtime":1612726047633,"results":"37","hashOfConfig":"21"},{"size":3873,"mtime":1612912473447,"results":"38","hashOfConfig":"21"},{"size":6871,"mtime":1612914814547,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"137qtrg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yoan/Projets/React/konkour/konkour/src/index.tsx",[],["80","81"],"/home/yoan/Projets/React/konkour/konkour/src/App.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Register/Register.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/Footer.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Firebase/firebase.ts",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Login/Login.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/Header.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/LogoSvg.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/Title.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/KButton.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Home/Home.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/ConnectedRoute.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Contests/Contests.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Profile/Profile.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Hooks/useUserProfile.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Hooks/useUser.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Admin/Admin.tsx",[],"/home/yoan/Projets/React/konkour/konkour/src/Pages/Admin/Components/NotPostedContests.tsx",["82","83"],"import React, { useState, useEffect } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { db } from '../../../Firebase/firebase';\nimport RawContest from '../../Components/RawContest';\nimport { RawContestType } from '../../../Firebase/dataTypes';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    autoRefreshCard: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      background: \"#FFFFFF\",\n      border: \"1px solid #EBEBEB\",\n      boxSizing: \"border-box\",\n      boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.575)\",\n      borderRadius: \"8px\",\n      width: 280,\n      height: 160,\n      margin: 30,\n    },\n    otherCard: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      background: \"#FFFFFF\",\n      border: \"1px solid #EBEBEB\",\n      boxSizing: \"border-box\",\n      boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.575)\",\n      borderRadius: \"8px\",\n      width: 280,\n      height: 560,\n      margin: 30,\n    },\n    contestsCard: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      background: \"#FFFFFF\",\n      border: \"1px solid #EBEBEB\",\n      boxSizing: \"border-box\",\n      boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.575)\",\n      borderRadius: \"8px\",\n      width: \"auto\",\n      height: 750,\n      margin: 30,\n      marginLeft: -295,\n      overflow: \"auto\"\n    }\n  }),\n);\n\nexport default function NotPostedContests() {\n\n  const classes = useStyles();\n\n  const [autoRefresh, setAutoRefresh] = useState(false);\n  const [autoRefreshTiming, setAutoRefreshTiming] = useState<number | number[]>(30);\n  const [autoRefreshInterval, setAutoRefreshInterval] = useState<number | null>(null);\n  const [contests, setContests] = useState<RawContestType[] | null>(null);\n\n  const getContests = () => {\n    db.collection(\"waiting-contests\").get().then((querySnapshot) => {\n      let ct:any[] = [];\n      querySnapshot.forEach((doc) => {\n        ct.push({...doc.data(), id: doc.id})\n      })\n      setContests(ct);\n    })\n  }\n\n  useEffect(() => {\n    getContests();\n  }, [])\n\n  return (\n    <Grid direction=\"row\" container>\n      <Grid item xs={4}>\n        <Card className={classes.autoRefreshCard}>\n          <Slider\n            value={autoRefreshTiming}\n            valueLabelDisplay={autoRefresh ? \"on\" : \"off\"}\n            step={5}\n            marks\n            min={5}\n            max={60}\n            onChange={(e, nb) => setAutoRefreshTiming(nb)}\n            style={{width: 250, marginBottom: 20}}\n            disabled={!autoRefresh}\n          / >\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => setAutoRefresh(!autoRefresh)}>\n            {autoRefresh ? \"DÃ©sactiver l'auto refresh\" : \"Activer l'auto refresh\"}\n          </Button>\n        </Card>\n        <Card className={classes.otherCard}>\n          Un carte vide mais bientot avec du contenu on l'espÃ¨re\n        </Card>\n      </Grid>\n      <Grid item xs={8}>\n        <div className={classes.contestsCard}>\n          {contests ? contests.map((contest: RawContestType) =>\n            <RawContest\n              author={contest.author}\n              contestDate={contest.contestDate}\n              harvestDate={contest.harvestDate}\n              url={contest.url}\n              sourceType={contest.sourceType}\n              key={contest.id}\n              twRt={contest.twRt}\n              twComment={contest.twComment}\n              twFav={contest.twFav}\n              twFollow={contest.twFollow}\n            />\n          ): []}\n        </div>\n      </Grid>\n    </Grid>\n  )\n}","/home/yoan/Projets/React/konkour/konkour/src/Pages/Components/RawContest.tsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":67,"column":10,"nodeType":"90","messageId":"91","endLine":67,"endColumn":29},{"ruleId":"88","severity":1,"message":"92","line":67,"column":31,"nodeType":"90","messageId":"91","endLine":67,"endColumn":53},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"@typescript-eslint/no-unused-vars","'autoRefreshInterval' is assigned a value but never used.","Identifier","unusedVar","'setAutoRefreshInterval' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]